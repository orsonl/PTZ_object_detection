#!/usr/bin/env python
import rospy
from sensor_msgs.msg import Joy
import urllib2
import urllib2 as ul
import time 
import cv2





arm_x=0
arm_y=0
arm_z=0


def control_arm(arm_y_control,arm_z_control, arm_x_control_increase, arm_x_control_decrease,resolution):
	# y control
	if(arm_y_control>0):
		arm_y=arm_y + resolution
	elif(arm_y_control<0):
		arm_y=arm_y - resolution
	# z control
	elif(arm_z_control>0):
		arm_z=arm_z + resolution	
	elif(arm_z_control<0):
		arm_z=arm_z - resolution	
	# x control
	elif(arm_x_control_increase==1):
		arm_x=arm_x + resolution	
	elif(arm_x_control_decrease==1):
		arm_x=arm_x - resolution
        print x 
	print y
        print z	
        # Move the arm. Commented during the development
	# moveArmTwist(arm_x,arm_y,arm_z)



def callback(data):
	#rospy.loginfo(data)
	#rospy.loginfo('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
        success_flag=data.buttons[6]
        failed_flag=data.buttons[7]

        #arm control
	arm_y_control = data.axes[6] 		      	
	arm_z_control = data.axes[7]                       
        arm_x_control_increase = data.buttons[3]
        arm_x_control_decrease = data.buttons[0]

        if(success_flag==1 and failed_flag==0):
        	rospy.set_param('smach_state', 'success')
		print 'success!'
	elif(success_flag==0 and failed_flag==1):
        	rospy.set_param('smach_state', 'failed')
		print 'failed!'
	control_arm(arm_y_control,arm_z_control, arm_x_control_increase, arm_x_control_decrease,resolution)  


 
def listener():
    rospy.init_node('teleop', anonymous=True)
    rospy.Subscriber("/joy", Joy, callback)
    #rospy.Subscriber("/joy_teleop/joy", Joy, callback)
    rospy.spin()
if __name__ == '__main__':
    listener()
